{"version":3,"sources":["components/IconSvg.js","components/IconLinkExternal.js","components/LinkExternal.js","routes/test/components/LinkExternal.js","routes/test/components/PopupFail.styles.js","routes/test/components/Button.js","routes/test/components/Text.js","routes/test/components/PopupFail.js","routes/test/components/WrapperAnswers.js","routes/test/components/Question.js","routes/test/PageTest.js"],"names":["IconSvg","styled","svg","attrs","version","xmlns","xmlnsXlink","Svg","IconLinkExternal","className","viewBox","fill","d","LinkExternal","children","props","target","rel","href","StyledLinkExternal","p","theme","color","bg","text","bgAccent","StyledPopupFail","dialog","red","StyledButton","StyledButtonShared","screen","lg","green","StyledButtonCorrect","StyledButtonWrong","Button","onClick","isCorrect","isRevealed","disabled","type","StyledText","Text","PopupFail","moreInfo","moveOntoNextQuestion","open","StyledWrapperAnswers","section","med","xlg","WrapperAnswers","StyledQuestion","h1","Question","PageTest","questions","useLocation","state","useState","currentQuestionNumber","setCurrentQuestionNumber","setIsRevealed","navigate","useNavigate","results","useRef","JSON","parse","stringify","showFail","setShowFail","toggleRevealAnswers","prev","delay","setTimeout","length","console","log","current","getButtonHandler","passed","WrapperPage","level","question","answers","map","answer","idx","correct","PageNotFound"],"mappings":"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","file":"static/js/4.1701e142.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n// generic svg component for extending to not rewrite attrs each time\r\nconst IconSvg = styled.svg.attrs({\r\n  version: '1.1',\r\n  xmlns: 'http://www.w3.org/2000/svg',\r\n  xmlnsXlink: 'http://www.w3.org/1999/xlink',\r\n})``;\r\n\r\nexport default IconSvg;\r\n","// Technique source\r\n// https://www.pinkdroids.com/blog/svg-react-styled-components/\r\n\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n// shared components\r\nimport IconSvg from './IconSvg';\r\n\r\n// viewbox sizes have to be equal to the original svg\r\n// fill=\"currentColor\" takes color from font color which changes on hover\r\n// className is here because if you want to resize the component you will:\r\n// style(IconLinkExternal)`...styles` and the className given by the styled-comp\r\n// will be redirected to the initial Svg component which actually changes stuff\r\nconst IconLinkExternal = ({ className }) => (\r\n  <Svg viewBox=\"0 0 14 14\" className={className}>\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M 9 2.5 L 9 3.5 L 11.78125 3.5 L 5.640625 9.640625 L 6.359375 10.359375 L 12.5 4.21875 L 12.5 7 L 13.5 7 L 13.5 2.5 Z M 2.5 4.5 L 2.5 13.5 L 11.5 13.5 L 11.5 7 L 10.5 8 L 10.5 12.5 L 3.5 12.5 L 3.5 5.5 L 8 5.5 L 9 4.5 Z M 2.5 4.5\"\r\n    />\r\n  </Svg>\r\n);\r\n\r\n// this component changes svg size\r\n// the className will be redirected here\r\nconst Svg = styled(IconSvg)`\r\n  width: 1em;\r\n  height: 1em;\r\n  margin-left: 0.2em;\r\n  vertical-align: bottom;\r\n  transform: translateY(-2px);\r\n`;\r\n\r\nIconLinkExternal.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default IconLinkExternal;\r\n","import PropTypes from 'prop-types';\r\n\r\n// shared components\r\nimport IconLinkExternal from './IconLinkExternal';\r\n\r\n// className given by styled-components library when extending\r\nconst LinkExternal = ({ children, href, className }) => {\r\n  const props = {\r\n    target: '_blank',\r\n    rel: 'noopener noreferrer',\r\n    href,\r\n    className,\r\n  };\r\n\r\n  return (\r\n    <a {...props}>\r\n      {children}\r\n      <IconLinkExternal />\r\n    </a>\r\n  );\r\n};\r\n\r\nLinkExternal.propTypes = {\r\n  children: PropTypes.node,\r\n  href: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LinkExternal;\r\n","import styled from 'styled-components';\r\n\r\nimport LinkExternal from '../../../components/LinkExternal';\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  background: ${(p) => p.theme.color.bg};\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 0.9em;\r\n  text-decoration: underline;\r\n  padding: 0.3em;\r\n  border: none;\r\n\r\n  &:link,\r\n  &:visited,\r\n  &:active {\r\n    color: ${(p) => p.theme.color.text};\r\n  }\r\n\r\n  &:hover {\r\n    background: ${(p) => p.theme.color.text};\r\n    color: ${(p) => p.theme.color.bgAccent};\r\n  }\r\n`;\r\n\r\nexport default StyledLinkExternal;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledPopupFail = styled.dialog`\r\n  padding: 1em 3em;\r\n  margin-top: 2em;\r\n  background-color: ${(p) => p.theme.color.bgAccent};\r\n  border: 3px solid ${(p) => p.theme.color.red};\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: static;\r\n  width: 100%;\r\n  color: inherit;\r\n`;\r\n\r\nexport { StyledPopupFail };\r\n// imported by Button.js and PopupFail.js\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n// extension of\r\nimport { StyledButtonShared } from '../../../components/Button';\r\n\r\n// specific parent environment\r\nimport { StyledPopupFail } from './PopupFail.styles.js';\r\n\r\nconst Button = ({ text, onClick, isCorrect, isRevealed }) => {\r\n  const props = {\r\n    disabled: isRevealed,\r\n    onClick,\r\n    type: 'button',\r\n    color: {\r\n      bg: 'initial',\r\n      color: 'initial',\r\n    },\r\n  };\r\n\r\n  if (isRevealed) {\r\n    if (isCorrect)\r\n      return <StyledButtonCorrect {...props}>{text}</StyledButtonCorrect>;\r\n\r\n    return <StyledButtonWrong {...props}>{text}</StyledButtonWrong>;\r\n  }\r\n\r\n  return <StyledButton {...props}>{text}</StyledButton>;\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isCorrect: PropTypes.bool,\r\n  isRevealed: PropTypes.bool,\r\n};\r\n\r\nconst StyledButton = styled(StyledButtonShared)`\r\n  box-shadow: 0 4px 0 rgba(255, 255, 255, 0.2);\r\n  opacity: 1;\r\n  color: ${(p) => p.theme.color.text};\r\n  background: ${(p) => p.theme.color.bgAccent};\r\n\r\n  &:active {\r\n    transform: translateY(2px);\r\n    box-shadow: 0 2px 0 rgba(255, 255, 255, 0.2);\r\n  }\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      background: rgba(255, 255, 255, 0.8);\r\n      color: ${(p) => p.theme.color.bgAccent};\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    box-shadow: 0 6px 0 rgba(255, 255, 255, 0.2);\r\n\r\n    &:active {\r\n      transform: translateY(4px);\r\n      box-shadow: 0 2px 0 rgba(255, 255, 255, 0.2);\r\n    }\r\n  }\r\n\r\n  ${StyledPopupFail} & {\r\n    background-color: ${(p) => p.theme.color.bg};\r\n    color: ${(p) => p.theme.color.text};\r\n    width: 100%;\r\n    padding: 1em;\r\n    opacity: 1;\r\n    box-shadow: none;\r\n\r\n    &:hover {\r\n      background: ${(p) => p.theme.color.green};\r\n    }\r\n\r\n    &:active {\r\n      transform: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledButtonCorrect = styled(StyledButton)`\r\n  background-color: ${(p) => p.theme.color.green};\r\n\r\n  // if user-agent supports hover then nulify hover effects after reveal\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      background: ${(p) => p.theme.color.green};\r\n      color: ${(p) => p.theme.color.text};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledButtonWrong = styled(StyledButton)`\r\n  background-color: ${(p) => p.theme.color.red};\r\n\r\n  // if user-agent supports hover then nulify hover effects after reveal\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      background: ${(p) => p.theme.color.red};\r\n      color: ${(p) => p.theme.color.text};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Text = ({ children }) => <StyledText>{children}</StyledText>;\r\n\r\nText.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst StyledText = styled.p`\r\n  &:nth-child(2) {\r\n    margin: 1.5em 0;\r\n  }\r\n`;\r\n\r\nexport default Text;\r\n","import PropTypes from 'prop-types';\r\n\r\n// local components\r\nimport LinkExternal from './LinkExternal';\r\nimport Button from './Button';\r\nimport Text from './Text';\r\n\r\n// styles\r\nimport { StyledPopupFail } from './PopupFail.styles';\r\n\r\nconst PopupFail = ({ moreInfo, moveOntoNextQuestion }) => (\r\n  <StyledPopupFail open>\r\n    <Button text=\"Next question\" onClick={moveOntoNextQuestion} />\r\n    <Text>Seems like you need to recheck this.</Text>\r\n    <Text>\r\n      Here you can find{' '}\r\n      <LinkExternal href={moreInfo}>more information</LinkExternal>\r\n    </Text>\r\n  </StyledPopupFail>\r\n);\r\n\r\nPopupFail.propTypes = {\r\n  moreInfo: PropTypes.string,\r\n  moveOntoNextQuestion: PropTypes.func,\r\n};\r\n\r\nexport default PopupFail;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WrapperAnswers = ({ children }) => (\r\n  <StyledWrapperAnswers>{children}</StyledWrapperAnswers>\r\n);\r\n\r\nWrapperAnswers.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport const StyledWrapperAnswers = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 60px 60px 60px 60px;\r\n  grid-gap: 20px;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.med}) {\r\n    grid-template-rows: 60px 60px 60px 60px;\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 80px 80px;\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.xlg}) {\r\n    grid-template-rows: 100px 100px;\r\n  }\r\n`;\r\n\r\nexport default WrapperAnswers;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Question = ({ children }) => <StyledQuestion>{children}</StyledQuestion>;\r\n\r\nQuestion.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst StyledQuestion = styled.h1`\r\n  background: ${(p) => p.theme.color.bgAccent};\r\n  display: flex;\r\n  font-size: 1.5em;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  padding: 0.5em;\r\n  margin-bottom: 1.3em;\r\n  line-height: 1.4em;\r\n\r\n  span {\r\n    display: block;\r\n    margin-right: 0.5em;\r\n  }\r\n`;\r\n\r\nexport default Question;\r\n","import { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useState, useRef } from 'react';\r\n\r\n// shared components\r\nimport PageNotFound from '../PageNotFound';\r\nimport HCenter from '../../components/HCenter';\r\n\r\n// local components\r\nimport PopupFail from './components/PopupFail';\r\nimport WrapperPage from './components/WrapperPage';\r\nimport WrapperAnswers from './components/WrapperAnswers';\r\nimport Question from './components/Question';\r\nimport Button from './components/Button';\r\n\r\nconst PageTest = () => {\r\n  const { state: questions } = useLocation();\r\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n  const navigate = useNavigate();\r\n  const results = useRef(JSON.parse(JSON.stringify(questions)));\r\n  const [showFail, setShowFail] = useState(false);\r\n\r\n  const toggleRevealAnswers = () => {\r\n    setIsRevealed((prev) => !prev);\r\n  };\r\n\r\n  const moveOntoNextQuestion = (delay) => {\r\n    setTimeout(() => {\r\n      if (currentQuestionNumber + 1 === questions.length) {\r\n        console.log('questions ended');\r\n        navigate('/results', { state: results.current });\r\n        return;\r\n      }\r\n\r\n      toggleRevealAnswers();\r\n      setCurrentQuestionNumber((prev) => prev + 1);\r\n      setShowFail(false);\r\n    }, delay);\r\n  };\r\n\r\n  const getButtonHandler = (isCorrect) => {\r\n    const failQuestion = () => {\r\n      results.current[currentQuestionNumber].passed = false;\r\n    };\r\n\r\n    const passQuestion = () => {\r\n      results.current[currentQuestionNumber].passed = true;\r\n    };\r\n\r\n    const showFailWindow = () => {\r\n      setShowFail(true);\r\n    };\r\n\r\n    if (isCorrect)\r\n      return () => {\r\n        toggleRevealAnswers();\r\n        passQuestion();\r\n        moveOntoNextQuestion(1000);\r\n      };\r\n\r\n    return () => {\r\n      toggleRevealAnswers();\r\n      failQuestion();\r\n      showFailWindow();\r\n    };\r\n  };\r\n\r\n  if (!questions) return <PageNotFound />;\r\n\r\n  return (\r\n    <WrapperPage>\r\n      <Question level={1}>\r\n        <span>{currentQuestionNumber + 1}.</span>\r\n        {questions[currentQuestionNumber].question}\r\n      </Question>\r\n\r\n      <WrapperAnswers>\r\n        {questions[currentQuestionNumber].answers.map((answer, idx) => (\r\n          <Button\r\n            key={idx}\r\n            text={answer.answer}\r\n            onClick={getButtonHandler(answer.correct)}\r\n            isCorrect={answer.correct}\r\n            isRevealed={isRevealed}\r\n          />\r\n        ))}\r\n      </WrapperAnswers>\r\n\r\n      {showFail && (\r\n        <PopupFail\r\n          moreInfo={questions[currentQuestionNumber].moreInfo}\r\n          moveOntoNextQuestion={moveOntoNextQuestion}\r\n        />\r\n      )}\r\n    </WrapperPage>\r\n  );\r\n};\r\n\r\nexport default PageTest;\r\n"],"sourceRoot":""}