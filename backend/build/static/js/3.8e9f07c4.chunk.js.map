{"version":3,"sources":["components/IconSvg.js","components/IconLinkExternal.js","components/LinkExternal.js","routes/results/components/Heading.js","routes/results/components/LinkExternal.js","routes/results/components/Question.js","routes/results/components/WrapperQuestions.js","routes/results/components/WrapperPage.js","components/LinkInternal.js","routes/results/components/LinkInternal.js","routes/results/components/WrapperLinkInternal.js","routes/results/PageResults.js"],"names":["IconSvg","styled","svg","attrs","version","xmlns","xmlnsXlink","Svg","IconLinkExternal","className","viewBox","fill","d","LinkExternal","children","props","target","rel","href","StyledHeading","h1","p","theme","color","bgAccent","Heading","StyledLinkExternal","bg","colorBorder","text","StyledWrapperQuestion","li","StyledQuestion","colorBg","Question","number","passed","question","moreInfo","StyledWrapperQuestions","ol","WrapperQuestions","StyledWrapperPage","main","screen","med","lg","WrapperPage","LinkInternal","to","StyledLinkInternal","StyledWrapperLinkInternal","div","WrapperLinkInternal","getMarkTest","PageResults","results","useLocation","state","correctAnswers","filter","result","length","mark","map","idx"],"mappings":"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","file":"static/js/3.8e9f07c4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n// generic svg component for extending to not rewrite attrs each time\r\nconst IconSvg = styled.svg.attrs({\r\n  version: '1.1',\r\n  xmlns: 'http://www.w3.org/2000/svg',\r\n  xmlnsXlink: 'http://www.w3.org/1999/xlink',\r\n})``;\r\n\r\nexport default IconSvg;\r\n","// Technique source\r\n// https://www.pinkdroids.com/blog/svg-react-styled-components/\r\n\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n// shared components\r\nimport IconSvg from './IconSvg';\r\n\r\n// viewbox sizes have to be equal to the original svg\r\n// fill=\"currentColor\" takes color from font color which changes on hover\r\n// className is here because if you want to resize the component you will:\r\n// style(IconLinkExternal)`...styles` and the className given by the styled-comp\r\n// will be redirected to the initial Svg component which actually changes stuff\r\nconst IconLinkExternal = ({ className }) => (\r\n  <Svg viewBox=\"0 0 14 14\" className={className}>\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M 9 2.5 L 9 3.5 L 11.78125 3.5 L 5.640625 9.640625 L 6.359375 10.359375 L 12.5 4.21875 L 12.5 7 L 13.5 7 L 13.5 2.5 Z M 2.5 4.5 L 2.5 13.5 L 11.5 13.5 L 11.5 7 L 10.5 8 L 10.5 12.5 L 3.5 12.5 L 3.5 5.5 L 8 5.5 L 9 4.5 Z M 2.5 4.5\"\r\n    />\r\n  </Svg>\r\n);\r\n\r\n// this component changes svg size\r\n// the className will be redirected here\r\nconst Svg = styled(IconSvg)`\r\n  width: 1em;\r\n  height: 1em;\r\n  margin-left: 0.2em;\r\n  vertical-align: bottom;\r\n  transform: translateY(-2px);\r\n`;\r\n\r\nIconLinkExternal.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default IconLinkExternal;\r\n","import PropTypes from 'prop-types';\r\n\r\n// shared components\r\nimport IconLinkExternal from './IconLinkExternal';\r\n\r\n// className given by styled-components library when extending\r\nconst LinkExternal = ({ children, href, className }) => {\r\n  const props = {\r\n    target: '_blank',\r\n    rel: 'noopener noreferrer',\r\n    href,\r\n    className,\r\n  };\r\n\r\n  return (\r\n    <a {...props}>\r\n      {children}\r\n      <IconLinkExternal />\r\n    </a>\r\n  );\r\n};\r\n\r\nLinkExternal.propTypes = {\r\n  children: PropTypes.node,\r\n  href: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LinkExternal;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Heading = ({ children }) => <StyledHeading>{children}</StyledHeading>;\r\n\r\nHeading.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst StyledHeading = styled.h1`\r\n  background: ${(p) => p.theme.color.bgAccent};\r\n  font-size: 1.5em;\r\n  font-weight: 700;\r\n  padding: 0.5em;\r\n  width: 100%;\r\n  margin-bottom: 1.3em;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n`;\r\n\r\nexport default Heading;\r\n","import styled from 'styled-components';\r\n\r\nimport LinkExternal from '../../../components/LinkExternal';\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: underline;\r\n  display: inline-block;\r\n  font-size: 0.9em;\r\n  padding: 0.7em 1.8em;\r\n  align-self: flex-end;\r\n  background: ${(p) => p.theme.color.bg};\r\n  border: 3px solid ${(p) => p.theme.color[p.colorBorder]};\r\n  border-top: none;\r\n\r\n  &:link,\r\n  &:visited,\r\n  &:active {\r\n    color: ${(p) => p.theme.color.text};\r\n  }\r\n\r\n  &:hover {\r\n    background: ${(p) => p.theme.color.text};\r\n    color: ${(p) => p.theme.color.bgAccent};\r\n  }\r\n`;\r\n\r\nexport default StyledLinkExternal;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n// local components\r\nimport LinkExternal from './LinkExternal';\r\n\r\nconst Question = ({ number, passed, question, moreInfo }) => (\r\n  <StyledWrapperQuestion>\r\n    <StyledQuestion colorBg={passed ? 'green' : 'red'}>\r\n      <span>{number}.</span>\r\n      {question}\r\n    </StyledQuestion>\r\n    <LinkExternal colorBorder={passed ? 'green' : 'red'} href={moreInfo}>\r\n      learn more\r\n    </LinkExternal>\r\n  </StyledWrapperQuestion>\r\n);\r\n\r\nQuestion.propTypes = {\r\n  number: PropTypes.number,\r\n  passed: PropTypes.bool,\r\n  question: PropTypes.string,\r\n  moreInfo: PropTypes.string,\r\n};\r\n\r\nexport const StyledWrapperQuestion = styled.li`\r\n  margin-bottom: 1.5em;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  &:last-of-type {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst StyledQuestion = styled.p`\r\n  display: block;\r\n  padding: 0.8em;\r\n  line-height: 1.4em;\r\n  display: flex;\r\n  background: ${(p) => p.theme.color[p.colorBg]};\r\n\r\n  span {\r\n    margin-right: 0.5em;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default Question;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WrapperQuestions = ({ children }) => (\r\n  <StyledWrapperQuestions>{children}</StyledWrapperQuestions>\r\n);\r\n\r\nWrapperQuestions.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst StyledWrapperQuestions = styled.ol`\r\n  padding-bottom: 2em;\r\n  background-color: ${(p) => p.theme.color.bgAccent};\r\n`;\r\n\r\nexport default WrapperQuestions;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WrapperPage = ({ children }) => (\r\n  <StyledWrapperPage>{children}</StyledWrapperPage>\r\n);\r\n\r\nWrapperPage.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst StyledWrapperPage = styled.main`\r\n  margin: 0 auto;\r\n  padding-top: 6em;\r\n  padding-bottom: 6em;\r\n  width: 85vw;\r\n  max-width: 1320px;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.med}) {\r\n    width: 75vw;\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    width: 70vw;\r\n  }\r\n`;\r\n\r\nexport default WrapperPage;\r\n","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkInternal = ({ to, className, children }) => {\r\n  const props = {\r\n    to,\r\n    className,\r\n  };\r\n\r\n  return <Link {...props}>{children}</Link>;\r\n};\r\n\r\nLinkInternal.propTypes = {\r\n  to: PropTypes.string,\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default LinkInternal;\r\n","import styled from 'styled-components';\r\nimport LinkInternal from '../../../components/LinkInternal';\r\n\r\nconst StyledLinkInternal = styled(LinkInternal)`\r\n  display: inline-block;\r\n  padding: 1em 2em;\r\n  background-color: ${(p) => p.theme.color.bgAccent};\r\n\r\n  &:link,\r\n  &:visited {\r\n    color: ${(p) => p.theme.color.text};\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${(p) => p.theme.color.bgAccent};\r\n    background-color: ${(p) => p.theme.color.text};\r\n  }\r\n`;\r\n\r\nexport default StyledLinkInternal;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WrapperLinkInternal = ({ children }) => (\r\n  <StyledWrapperLinkInternal>{children}</StyledWrapperLinkInternal>\r\n);\r\n\r\nWrapperLinkInternal.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst StyledWrapperLinkInternal = styled.div`\r\n  display: flex;\r\n  justify-content: right;\r\n  margin: 2em 0;\r\n`;\r\n\r\nexport default WrapperLinkInternal;\r\n","/* eslint-disable no-use-before-define */\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// local components\r\nimport Heading from './components/Heading';\r\nimport Question from './components/Question';\r\nimport WrapperQuestions from './components/WrapperQuestions';\r\nimport WrapperPage from './components/WrapperPage';\r\nimport LinkInternal from './components/LinkInternal';\r\nimport WrapperLinkInternal from './components/WrapperLinkInternal';\r\n\r\nconst PageResults = () => {\r\n  const { state: results } = useLocation();\r\n\r\n  const correctAnswers = results.filter((result) => result.passed).length;\r\n  const mark = getMarkTest(correctAnswers);\r\n\r\n  return (\r\n    <WrapperPage>\r\n      <Heading>\r\n        {mark} <br /> {`You got ${correctAnswers}/10`}\r\n      </Heading>\r\n\r\n      <WrapperQuestions>\r\n        {results.map((result, idx) => (\r\n          <Question\r\n            number={idx + 1}\r\n            passed={result.passed}\r\n            question={result.question}\r\n            moreInfo={result.moreInfo}\r\n            key={idx}\r\n          />\r\n        ))}\r\n      </WrapperQuestions>\r\n\r\n      <WrapperLinkInternal>\r\n        <LinkInternal to=\"/\">Return to homepage</LinkInternal>\r\n      </WrapperLinkInternal>\r\n    </WrapperPage>\r\n  );\r\n};\r\n\r\n// get result text by the nr of correct answers\r\nconst getMarkTest = (number) => {\r\n  if (number === 10) {\r\n    return 'Perfect!';\r\n  }\r\n  if (number >= 8) {\r\n    return 'Good job';\r\n  }\r\n  if (number >= 5) {\r\n    return 'Poor job';\r\n  }\r\n  if (number >= 2) {\r\n    return 'Very bad';\r\n  }\r\n  return 'Awful';\r\n};\r\n\r\nexport default PageResults;\r\n"],"sourceRoot":""}