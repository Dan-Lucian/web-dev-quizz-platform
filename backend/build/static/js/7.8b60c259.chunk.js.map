{"version":3,"sources":["routes/submit/components/WrapperPage.js","routes/submit/components/Heading.js","routes/submit/PageSubmit.js"],"names":["StyledWrapperPage","styled","main","p","theme","screen","med","lg","xlg","WrapperPage","children","StyledHeading","h1","color","bgAccent","Heading","PageSubmit","useState","question","setQuestion","answerCorrect","setAnswerCorrect","answerWrong1","setAnswerWrong1","answerWrong2","setAnswerWrong2","answerWrong3","setAnswerWrong3","topics","setTopics","moreInfo","setMoreInfo","useAsync","receivedData","data","status","run","onSubmit","e","preventDefault","length","Error","splitTopics","split","map","topic","trim","forEach","getTopicInfo","answers","answer","correct","console","log","questions","send","htmlFor","onChange","target","value","id","type","onClick","JSON","stringify"],"mappings":"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","file":"static/js/7.8b60c259.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WrapperPage = ({ children }) => (\r\n  <StyledWrapperPage>{children}</StyledWrapperPage>\r\n);\r\n\r\nWrapperPage.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst StyledWrapperPage = styled.main`\r\n  width: 100%;\r\n  padding: 5em 0;\r\n  margin: 0 auto;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.med}) {\r\n    width: 725px;\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    width: 990px;\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.xlg}) {\r\n    width: 1320px;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    input,\r\n    textarea {\r\n      font-size: 1em;\r\n      margin-bottom: 1em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default WrapperPage;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Heading = ({ children }) => <StyledHeading>{children}</StyledHeading>;\r\n\r\nHeading.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst StyledHeading = styled.h1`\r\n  background: ${(p) => p.theme.color.bgAccent};\r\n  font-size: 1.5em;\r\n  font-weight: 700;\r\n  padding: 0.5em;\r\n  width: 100%;\r\n  margin-bottom: 0.5em;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n`;\r\n\r\nexport default Heading;\r\n","import { useState } from 'react';\r\n\r\n// local components\r\nimport WrapperPage from './components/WrapperPage';\r\nimport Heading from './components/Heading';\r\n\r\n// shared hooks\r\nimport { useAsync } from '../../hooks/useAsync';\r\n\r\n// shared services\r\nimport questions from '../../services/questions';\r\n\r\n// shared utils\r\nimport { getTopicInfo } from '../index/utils/dbTopics';\r\n\r\nconst PageSubmit = () => {\r\n  const [question, setQuestion] = useState('');\r\n  const [answerCorrect, setAnswerCorrect] = useState('');\r\n  const [answerWrong1, setAnswerWrong1] = useState('');\r\n  const [answerWrong2, setAnswerWrong2] = useState('');\r\n  const [answerWrong3, setAnswerWrong3] = useState('');\r\n  const [topics, setTopics] = useState('');\r\n  const [moreInfo, setMoreInfo] = useState('');\r\n\r\n  const { data: receivedData, status, run } = useAsync();\r\n\r\n  const resetForm = () => {\r\n    setQuestion('');\r\n    setAnswerCorrect('');\r\n    setAnswerWrong1('');\r\n    setAnswerWrong2('');\r\n    setAnswerWrong3('');\r\n    setTopics('');\r\n    setMoreInfo('');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      question.length === 0 ||\r\n      answerCorrect.length === 0 ||\r\n      answerWrong1.length === 0 ||\r\n      answerWrong2.length === 0 ||\r\n      answerWrong3.length === 0 ||\r\n      topics.length === 0 ||\r\n      moreInfo.length === 0\r\n    ) {\r\n      throw new Error('one input was empty');\r\n    }\r\n\r\n    const splitTopics = topics.split(',').map((topic) => topic.trim());\r\n    splitTopics.forEach((topic) => {\r\n      if (!getTopicInfo(topic)) throw new Error(`invalid topic: ${topic}`);\r\n    });\r\n\r\n    const data = {\r\n      question,\r\n      answers: [\r\n        { answer: answerCorrect, correct: true },\r\n        { answer: answerWrong1, correct: false },\r\n        { answer: answerWrong2, correct: false },\r\n        { answer: answerWrong3, correct: false },\r\n      ],\r\n      topics: splitTopics,\r\n      moreInfo,\r\n    };\r\n\r\n    console.log('data', data);\r\n    run(questions.send(data));\r\n  };\r\n\r\n  return (\r\n    <WrapperPage>\r\n      <Heading>Submit the question</Heading>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"question\">Question</label>\r\n        <textarea\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n          value={question}\r\n          id=\"question\"\r\n        />\r\n        <label htmlFor=\"answer-correct\">Correct answer</label>\r\n        <input\r\n          onChange={(e) => setAnswerCorrect(e.target.value)}\r\n          value={answerCorrect}\r\n          id=\"answer-correct\"\r\n        />\r\n        <label htmlFor=\"answer-wrong\">Wrong answer</label>\r\n        <input\r\n          onChange={(e) => setAnswerWrong1(e.target.value)}\r\n          value={answerWrong1}\r\n          id=\"answer-wrong\"\r\n        />\r\n        <label htmlFor=\"answer-wrong\">Wrong answer</label>\r\n        <input\r\n          onChange={(e) => setAnswerWrong2(e.target.value)}\r\n          value={answerWrong2}\r\n          id=\"answer-wrong\"\r\n        />\r\n        <label htmlFor=\"answer-wrong\">Wrong answer</label>\r\n        <input\r\n          onChange={(e) => setAnswerWrong3(e.target.value)}\r\n          value={answerWrong3}\r\n          id=\"answer-wrong\"\r\n        />\r\n        <label htmlFor=\"topics\">Topics (comma delimited, lower case)</label>\r\n        <input\r\n          onChange={(e) => setTopics(e.target.value)}\r\n          value={topics}\r\n          id=\"topics\"\r\n        />\r\n        <label htmlFor=\"more-info\">More info (link)</label>\r\n        <input\r\n          onChange={(e) => setMoreInfo(e.target.value)}\r\n          value={moreInfo}\r\n          id=\"more-info\"\r\n        />\r\n        <input type=\"submit\" value=\"Submit\" />\r\n        <input type=\"reset\" value=\"Reset\" onClick={resetForm} />\r\n        <p>Status: {status}</p>\r\n        <p>Reponse: {JSON.stringify(receivedData)}</p>\r\n      </form>\r\n    </WrapperPage>\r\n  );\r\n};\r\n\r\nexport default PageSubmit;\r\n"],"sourceRoot":""}